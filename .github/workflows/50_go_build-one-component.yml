name: "Golang: Build one component"

on:
  workflow_call:
    inputs:
      component-name:
        required: true
        type: string
      go-build-cache-restore-or-update:
        required: false
        type: string
        default: 'restore'
      go-mod-path:
        required: false
        type: string
        default: 'go.mod'
      go-mod-cache-restore-or-update:
        required: false
        type: string
        default: 'restore'
      arch-os-preset:
        required: false
        type: string
        default: 'wip_ignore_for_now'
      docker-image-base:
        required: false
        type: string
        default: ''
      retag-base-image:
        required: false
        type: boolean
        default: false
      pack-to-docker-image:
        required: false
        type: boolean
        default: false
      base-sha:
        required: false
        type: string
        default: 'anysha'
      head-sha:
        required: false
        type: string
        default: 'anysha'

jobs:
  build-go-component:
    strategy:
      matrix:
        goarch: ['amd64', 'arm64' ] # [ 'amd64', 'arm64', '386', 'arm' ]
        goos: ['linux'] # [ 'linux', 'windows', 'darwin' ]
        # exclude:
          # - goarch: '386'
            # goos: 'darwin'
          # - goarch: 'arm'
            # goos: 'darwin'
    uses: ./.github/workflows/50_go_build-one-arch-one-os-one-path.yml
    secrets: inherit
    name: '${{ inputs.component-name }} ${{ matrix.goos }}/${{ matrix.goarch }}'
    with:
      cmd-path: './cmd/${{ inputs.component-name }}'
      goarch: ${{ matrix.goarch }}
      goos: ${{ matrix.goos }}
      docker-image-base: ${{ inputs.docker-image-base }}
      pack-to-docker-image: ${{ inputs.pack-to-docker-image }}
      retag-base-image: ${{ inputs.retag-base-image }}
      base-sha: ${{ inputs.base-sha }}
      head-sha: ${{ inputs.head-sha }}
      go-build-cache-restore-or-update: ${{ inputs.go-build-cache-restore-or-update }}
      go-mod-cache-restore-or-update: ${{ inputs.go-mod-cache-restore-or-update }}
