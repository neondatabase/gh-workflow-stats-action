name: Build Go cmd

on:
  workflow_call:
    inputs:
      cmd-path:
        required: true
        type: string
      go-mod-path:
        required: false
        type: string
        default: 'go.mod'
      goarch:
        required: false
        type: string
        default: ''


jobs:
  build:
    runs-on: [ self-hosted, small ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        id: setup-go
        with:
          cache: false
          go-version-file: ${{ inputs.go-mod-path }}
      - id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod-cache=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
      - id: goarch
        run: |
          GOARCH_INPUT="${{ inputs.goarch }}"
          RUNNER_ARCH="${{ runner.arch }}"
          echo "v=${GOARCH_INPUT:-$RUNNER_ARCH}" >> "$GITHUB_OUTPUT"
      - name: Go Cache
        uses: tespkg/actions-cache@v1
        with:
          endpoint: ${{ vars.HETZNER_CACHE_REGION }}.${{ vars.HETZNER_CACHE_ENDPOINT }}
          bucket: ${{ vars.HETZNER_CACHE_BUCKET }}
          accessKey: ${{ secrets.HETZNER_CACHE_ACCESS_KEY }}
          secretKey: ${{ secrets.HETZNER_CACHE_SECRET_KEY }}
          use-fallback: false
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod-cache }}
          key: ${{ runner.os }}-${{ steps.goarch.outputs.v }}-go-${{ steps.setup-go.outputs.go-version}}-cache-v1-${{ hashFiles('**/go.sum') }}
      - name: Go Build
        run: GOOS=${{ steps.goarch.outputs.v }} go build -v ${{ inputs.cmd-path }}
